function PhotoFit(){this.photoListGroup=$(".photos-list-group")}PhotoFit.prototype.listenLoadAllDataEvent=function(){var l=this;antajax.get({url:"/photo/list/",success:function(t){if(200===t.code)for(var o=t.data,e=0;e<o.length;e++){var n=o[e],a=template("photos-item",{photo:n});l.photoListGroup.append(a);var i=l.photoListGroup.find(".photos-item:last"),s=l.photoListGroup.find(".data-item:last");l.listenAddImageEvent(i),l.listenCloseBtnEvent(i),l.listenSavePhotoBtnEvent(i),l.listenExtractDataEvent(i),l.listenDisplayPersonModelEvent(i),l.listenLoadAllModelEvent(s)}}})},PhotoFit.prototype.listenAddBannerUpEvent=function(){var t=this;$("#add-photo-btn").click(function(){6<=t.photoListGroup.children().length?window.messageBox.showInfo("只能添加6张图片哦~~"):t.createPhotoBtnEvent()})},PhotoFit.prototype.createPhotoBtnEvent=function(){var t=this,o=template("photos-item");t.photoListGroup.prepend(o);var e=t.photoListGroup.find(".photos-item:first"),n=t.photoListGroup.find(".data-item:last");t.listenAddImageEvent(e),t.listenCloseBtnEvent(e),t.listenSavePhotoBtnEvent(e),t.listenExtractDataEvent(e),t.listenDisplayPersonModelEvent(e),t.listenLoadAllModelEvent(n)},PhotoFit.prototype.listenAddImageEvent=function(t){var e=t.find(".thumbnail"),o=t.find(".image-input");e.click(function(){o.click()}),o.change(function(){var t=this.files[0],o=new FormData;o.append("file",t),antajax.post({url:"/upload/file/",data:o,processData:!1,contentType:!1,success:function(t){if(200===t.code){var o=t.data.url;e.attr("src",o)}}})})},PhotoFit.prototype.listenCloseBtnEvent=function(e){var n=this;e.find(".close-btn").click(function(){var t=e.attr("data-photo-id");t?antalert.alertConfirm({text:"您确定要删除该照片吗？无法撤销哦！~~~",confirmCallback:function(){antajax.post({url:"/del/photo/",data:{photo_id:t},success:function(t){e.remove(),window.messageBox.showSuccess(t.message)}})}}):e.remove();var o=n.photoListGroup.find(".data-item");modelId=e.attr("data-model-id"),console.log(modelId),modelId?antalert.alertConfirm({confirmCallback:function(){antajax.post({url:"/del/model/",data:{model_id:modelId},success:function(t){o.remove()}})}}):o.remove()})},PhotoFit.prototype.listenSavePhotoBtnEvent=function(t){var o=t.find(".save-btn"),e=t.find(".thumbnail");o.click(function(){var t=e.attr("src");antajax.post({url:"/save/photo/",data:{img_url:t},success:function(t){200===t.code?window.messageBox.showSuccess("图片保存成功！"):(console.log(t.code),console.log(t.message))},fail:function(t){console.log(t.message)}})})},PhotoFit.prototype.listenAddBannerEvent=function(){var t=this;$("#add-photo-btn").click(function(){t.createPhotoBtnEvent()})},PhotoFit.prototype.listenExtractDataEvent=function(o){o.find(".extract-data-btn").click(function(){var t=o.find(".thumbnail").attr("src");antajax.post({url:"/extract/data/",data:{img_url:t},success:function(t){200===t.code&&window.messageBox.showSuccess(t.message)}})})},PhotoFit.prototype.listenDisplayPersonModelEvent=function(t){var a=this,i=(t.find(".data-item"),t.find(".modelThumbnail"));t.find(".extract-data-btn").click(function(){antajax.get({url:"/model/serialize/",success:function(t){if(200===t.code){models=t.data;for(var o=0;o<models.length;o++){var e=models[o],n=template("photos-item",{model:e});a.photoListGroup.append(n),url=t.data[o].model_url,i.attr("src",url)}}}})})},PhotoFit.prototype.listenLoadAllModelEvent=function(t){var a=t.find(".modelThumbnail");antajax.get({url:"/model/serialize/",success:function(t){if(200===t.code)for(var o=t.data,e=0;e<o.length;e++){var n=t.data[e].model_url;a.attr("src",n)}}})},PhotoFit.prototype.run=function(){this.listenExtractDataEvent()},PhotoFit.prototype.run=function(){this.listenAddBannerEvent(),this.listenLoadAllDataEvent()},$(function(){(new PhotoFit).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob3RvRml0LmpzIl0sIm5hbWVzIjpbIlBob3RvRml0IiwidGhpcyIsInBob3RvTGlzdEdyb3VwIiwiJCIsInByb3RvdHlwZSIsImxpc3RlbkxvYWRBbGxEYXRhRXZlbnQiLCJzZWxmIiwiYW50YWpheCIsImdldCIsInVybCIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJwaG90b3MiLCJpIiwibGVuZ3RoIiwicGhvdG8iLCJ0cGwiLCJ0ZW1wbGF0ZSIsImFwcGVuZCIsInBob3RvSXRlbSIsImZpbmQiLCJkYXRhSXRlbSIsImxpc3RlbkFkZEltYWdlRXZlbnQiLCJsaXN0ZW5DbG9zZUJ0bkV2ZW50IiwibGlzdGVuU2F2ZVBob3RvQnRuRXZlbnQiLCJsaXN0ZW5FeHRyYWN0RGF0YUV2ZW50IiwibGlzdGVuRGlzcGxheVBlcnNvbk1vZGVsRXZlbnQiLCJsaXN0ZW5Mb2FkQWxsTW9kZWxFdmVudCIsImxpc3RlbkFkZEJhbm5lclVwRXZlbnQiLCJjbGljayIsImNoaWxkcmVuIiwid2luZG93IiwibWVzc2FnZUJveCIsInNob3dJbmZvIiwiY3JlYXRlUGhvdG9CdG5FdmVudCIsInByZXBlbmQiLCJ0aHVtYm5haWwiLCJpbWFnZUlucHV0IiwiY2hhbmdlIiwiZmlsZSIsImZpbGVzIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsInBvc3QiLCJkYXRhIiwicHJvY2Vzc0RhdGEiLCJjb250ZW50VHlwZSIsImF0dHIiLCJwaG90b0lkIiwiYW50YWxlcnQiLCJhbGVydENvbmZpcm0iLCJ0ZXh0IiwiY29uZmlybUNhbGxiYWNrIiwicGhvdG9faWQiLCJyZW1vdmUiLCJzaG93U3VjY2VzcyIsIm1vZGVsSXRlbSIsIm1vZGVsSWQiLCJjb25zb2xlIiwibG9nIiwibW9kZWxfaWQiLCJzYXZlQnRuIiwidGh1bWJuYWlsVGFnIiwiaW1nX3VybCIsImZhaWwiLCJlcnJvciIsImxpc3RlbkFkZEJhbm5lckV2ZW50IiwibW9kZWxUaHVtYm5haWwiLCJtb2RlbHMiLCJtb2RlbCIsInJ1biJdLCJt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QXVCLE1BQW5CQSxFQUFhLEtBQVcsQ0FheEJ5RCxPQUFTekQsRUFBYSxLQUN0QixJQUFLLElBQUlFLEVBQUksRUFBR0EsRUFBSXVELE9BQU90RCxPQUFRRCxJQUFLLENBQ3BDLElBQUl3RCxFQUFRRCxPQUFPdkQsR0FDZkcsRUFBTUMsU0FBUyxjQUFlLENBQUNvRCxNQUFTQSxJQUM1Qy9ELEVBQUtKLGVBQWVnQixPQUFPRixHQUMzQlAsSUFBTUUsRUFBYSxLQUFFRSxHQUFjLFVBQy9Cc0QsRUFBZXBCLEtBQUssTUFBT3RDLGFBYXZEVCxTQUFTSSxVQUFVdUIsd0JBQTBCLFNBQVVOLEdBQ25ELElBRUllLEVBQVlmLEVBQVNELEtBQUssbUJBRTlCYixRQUFRQyxJQUFJLENBQ1JDLElBQU8sb0JBQ1BDLFFBQVcsU0FBVUMsR0FDakIsR0FBdUIsTUFBbkJBLEVBQWEsS0FFYixJQURBLElBQUl5RCxFQUFTekQsRUFBYSxLQUNqQkUsRUFBSSxFQUFHQSxFQUFJdUQsRUFBT3RELE9BQVFELElBQUssQ0FDcEMsSUFBSUosRUFBTUUsRUFBYSxLQUFFRSxHQUFjLFVBQ3ZDdUIsRUFBVVcsS0FBSyxNQUFPdEMsUUFPMUNULFNBQVNJLFVBQVVrRSxJQUFNLFdBQ3JCckUsS0FBS3dCLDBCQUdUekIsU0FBU0ksVUFBVWtFLElBQU0sV0FDckJyRSxLQUFLaUUsdUJBQ0xqRSxLQUFLSSwwQkFHVEYsRUFBRSxZQUNjLElBQUlILFVBQ1ZzRSIsImZpbGUiOiJwaG90b0ZpdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyDmt7vliqDnhafniYdcclxuZnVuY3Rpb24gUGhvdG9GaXQoKSB7XHJcbiAgICB0aGlzLnBob3RvTGlzdEdyb3VwID0gJChcIi5waG90b3MtbGlzdC1ncm91cFwiKTtcclxufVxyXG5cclxuLy8g5Yqg6L295omA5pyJcGhvdG/kuovku7ZcclxuUGhvdG9GaXQucHJvdG90eXBlLmxpc3RlbkxvYWRBbGxEYXRhRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBhbnRhamF4LmdldCh7XHJcbiAgICAgICAgJ3VybCc6ICcvcGhvdG8vbGlzdC8nLFxyXG4gICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBob3RvcyA9IHJlc3VsdFsnZGF0YSddO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwaG90b3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcGhvdG8gPSBwaG90b3NbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRwbCA9IHRlbXBsYXRlKCdwaG90b3MtaXRlbScsIHsncGhvdG8nOiBwaG90b30pO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYucGhvdG9MaXN0R3JvdXAuYXBwZW5kKHRwbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vIOS4uuaWsOa3u+WKoOeahHBob3Rv5re75Yqg5YWz6Zet44CB5L+d5a2Y5LqL5Lu2XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBob3RvSXRlbSA9IHNlbGYucGhvdG9MaXN0R3JvdXAuZmluZChcIi5waG90b3MtaXRlbTpsYXN0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRhSXRlbSA9IHNlbGYucGhvdG9MaXN0R3JvdXAuZmluZChcIi5kYXRhLWl0ZW06bGFzdFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLmxpc3RlbkFkZEltYWdlRXZlbnQocGhvdG9JdGVtKTtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLmxpc3RlbkNsb3NlQnRuRXZlbnQocGhvdG9JdGVtKTtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLmxpc3RlblNhdmVQaG90b0J0bkV2ZW50KHBob3RvSXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5saXN0ZW5FeHRyYWN0RGF0YUV2ZW50KHBob3RvSXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5saXN0ZW5EaXNwbGF5UGVyc29uTW9kZWxFdmVudChwaG90b0l0ZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYubGlzdGVuTG9hZEFsbE1vZGVsRXZlbnQoZGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcblxyXG4vLyDpmZDliLblj6rog73kuIrkvKA25byg6L2u5pKt5Zu+5LqL5Lu2XHJcblBob3RvRml0LnByb3RvdHlwZS5saXN0ZW5BZGRCYW5uZXJVcEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGFkZEJ0biA9ICQoXCIjYWRkLXBob3RvLWJ0blwiKTtcclxuICAgIGFkZEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHBob3RvTGVuZ3RoID0gc2VsZi5waG90b0xpc3RHcm91cC5jaGlsZHJlbigpLmxlbmd0aDtcclxuICAgICAgICBpZiAocGhvdG9MZW5ndGggPj0gNikge1xyXG4gICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93SW5mbyhcIuWPquiDvea3u+WKoDblvKDlm77niYflk6Z+flwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzZWxmLmNyZWF0ZVBob3RvQnRuRXZlbnQoKTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuLy8g5Yib5bu65Y2h54mH55qE5oyJ6ZKu5LqL5Lu2XHJcblBob3RvRml0LnByb3RvdHlwZS5jcmVhdGVQaG90b0J0bkV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgLy8gdGVtcGxhdGUoKeWHveaVsOi/lOWbnueahOaYr+Wtl+espuS4su+8jOS4jeiDveWkn+WFtua3u+WKoOeCueWHu+S6i+S7tu+8jFxyXG4gICAgLy8g6ZyA6KaB5bCG5YW25re75Yqg5aSn572R6aG15Lit77yM5oiQ5Li6572R6aG15Lit55qE5qCH562+XHJcbiAgICB2YXIgdHBsID0gdGVtcGxhdGUoXCJwaG90b3MtaXRlbVwiKTtcclxuICAgIHNlbGYucGhvdG9MaXN0R3JvdXAucHJlcGVuZCh0cGwpO1xyXG5cclxuICAgIC8vIOa3u+WKoOeCueWHu+S6i+S7tuW/hemhu+WcqOa3u+WKoHRwbOWIsOe9kemhteS4reS5i+WQjlxyXG4gICAgdmFyIHBob3RvSXRlbSA9IHNlbGYucGhvdG9MaXN0R3JvdXAuZmluZChcIi5waG90b3MtaXRlbTpmaXJzdFwiKTtcclxuICAgIHZhciBkYXRhSXRlbSA9IHNlbGYucGhvdG9MaXN0R3JvdXAuZmluZChcIi5kYXRhLWl0ZW06bGFzdFwiKTtcclxuXHJcbiAgICBzZWxmLmxpc3RlbkFkZEltYWdlRXZlbnQocGhvdG9JdGVtKTtcclxuICAgIHNlbGYubGlzdGVuQ2xvc2VCdG5FdmVudChwaG90b0l0ZW0pO1xyXG4gICAgc2VsZi5saXN0ZW5TYXZlUGhvdG9CdG5FdmVudChwaG90b0l0ZW0pO1xyXG4gICAgc2VsZi5saXN0ZW5FeHRyYWN0RGF0YUV2ZW50KHBob3RvSXRlbSk7XHJcbiAgICBzZWxmLmxpc3RlbkRpc3BsYXlQZXJzb25Nb2RlbEV2ZW50KHBob3RvSXRlbSk7XHJcbiAgICBzZWxmLmxpc3RlbkxvYWRBbGxNb2RlbEV2ZW50KGRhdGFJdGVtKTtcclxufTtcclxuXHJcbi8vIOa3u+WKoOeCueWHu+a3u+WKoOWbvueJh+S6i+S7tizlsIblm77niYfkv53lrZjoh7PmnKzlnLDmnI3liqHlmahcclxuUGhvdG9GaXQucHJvdG90eXBlLmxpc3RlbkFkZEltYWdlRXZlbnQgPSBmdW5jdGlvbiAocGhvdG9JdGVtKSB7XHJcbiAgICB2YXIgdGh1bWJuYWlsID0gcGhvdG9JdGVtLmZpbmQoXCIudGh1bWJuYWlsXCIpO1xyXG4gICAgdmFyIGltYWdlSW5wdXQgPSBwaG90b0l0ZW0uZmluZChcIi5pbWFnZS1pbnB1dFwiKTtcclxuICAgIC8vIOS5n+WPr+S7pemAmui/h+S7peS4i+aWueW8j+eFp+W9k+W9k+WJjXRodW1ibmFpbOWQjOe6p+eahGltYWdlLWlucHV0XHJcbiAgICAvLyB2YXIgaW1hZ2VJbnB1dCA9IHRodW1ibmFpbC5zaWJsaW5ncyhcIi5pbWFnZS1pbnB1dFwiKTtcclxuXHJcbiAgICAvLyDkuLrlvZPliY3nmoTlm77niYfmt7vliqDngrnlh7vkuovku7ZcclxuICAgIHRodW1ibmFpbC5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaW1hZ2VJbnB1dC5jbGljaygpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8g5Li65b2T5YmN6YCJ5Lit55qE5Zu+54mH5re75Yqg5omT5byA5LqL5Lu277yM5Y2zY2hhbmdlKCnkuovku7ZcclxuICAgIGltYWdlSW5wdXQuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyDojrflj5blvZPliY3pgInkuK3nmoTmlofku7ZcclxuICAgICAgICAvLyB0aGlzLuS7o+ihqOW9k+WJjeeahGltYWdlLWlucHV0XHJcbiAgICAgICAgdmFyIGZpbGUgPSB0aGlzLmZpbGVzWzBdO1xyXG4gICAgICAgIC8vIOmAmui/h0Zvcm1EYXRhKCnlh73mlbDliJvlu7rkuIDkuKrnqbrnmoTlr7nosaHvvIzkuYvlkI7lsLHlj6/ku6XpgJrov4dhcHBlbmQoKSxzZXQoKSxnZXQoKeetieWvueivpeWvueixoei/m+ihjOa3u+WKoO+8jOiuvue9ru+8jOiOt+WPluaTjeS9nFxyXG4gICAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIC8vIOS4iuS8oOWIsOacrOWcsOacjeWKoeWZqOeahOaOpeWPo+aYr+mAmui/hydmaWxlJ1xyXG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZChcImZpbGVcIiwgZmlsZSk7XHJcbiAgICAgICAgYW50YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgJ3VybCc6IFwiL3VwbG9hZC9maWxlL1wiLFxyXG4gICAgICAgICAgICAnZGF0YSc6IGZvcm1EYXRhLFxyXG4gICAgICAgICAgICAncHJvY2Vzc0RhdGEnOiBmYWxzZSxcclxuICAgICAgICAgICAgJ2NvbnRlbnRUeXBlJzogZmFsc2UsXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gcmVzdWx0WydkYXRhJ11bJ3VybCddO1xyXG4gICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbC5hdHRyKCdzcmMnLCB1cmwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcblxyXG4vLyDnm5HlkKzliKDpmaTljaHniYfnmoTlhbPpl63mjInpkq5cclxuUGhvdG9GaXQucHJvdG90eXBlLmxpc3RlbkNsb3NlQnRuRXZlbnQgPSBmdW5jdGlvbiAocGhvdG9JdGVtKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyB2YXIgY2xvc2VCdG4gPSAkKFwiLmNsb3NlLWJ0blwiKTtcclxuICAgIHZhciBjbG9zZUJ0biA9IHBob3RvSXRlbS5maW5kKFwiLmNsb3NlLWJ0blwiKTtcclxuICAgIC8vIHZhciBjbG9zZU1vZGVsQnRuID0gcGhvdG9JdGVtLmZpbmQoXCIuY2xvc2UtbW9kZWwtYnRuXCIpO1xyXG5cclxuICAgIGNsb3NlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyB2YXIgcGhvdG9JdGVtID0gJChcIi5waG90b3MtaXRlbVwiKTtcclxuICAgICAgICAvLyBwaG90b0l0ZW0ucmVtb3ZlKCk7XHJcbiAgICAgICAgdmFyIHBob3RvSWQgPSBwaG90b0l0ZW0uYXR0cihcImRhdGEtcGhvdG8taWRcIik7XHJcblxyXG5cclxuXHJcbiAgICAgICAgaWYgKHBob3RvSWQpIHtcclxuICAgICAgICAgICAgYW50YWxlcnQuYWxlcnRDb25maXJtKHtcclxuICAgICAgICAgICAgICAgICd0ZXh0JzogJ+aCqOehruWumuimgeWIoOmZpOivpeeFp+eJh+WQl++8n+aXoOazleaSpOmUgOWTpu+8gX5+ficsXHJcbiAgICAgICAgICAgICAgICAnY29uZmlybUNhbGxiYWNrJzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFudGFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICd1cmwnOiAnL2RlbC9waG90by8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwaG90b19pZCc6IHBob3RvSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGhvdG9JdGVtLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd1N1Y2Nlc3MocmVzdWx0WydtZXNzYWdlJ10pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHBob3RvSXRlbS5yZW1vdmUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBtb2RlbEl0ZW0gPSBzZWxmLnBob3RvTGlzdEdyb3VwLmZpbmQoXCIuZGF0YS1pdGVtXCIpO1xyXG4gICAgICAgIG1vZGVsSWQgPSBwaG90b0l0ZW0uYXR0cihcImRhdGEtbW9kZWwtaWRcIik7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKG1vZGVsSWQpO1xyXG4gICAgICAgIGlmIChtb2RlbElkKSB7XHJcbiAgICAgICAgICAgIGFudGFsZXJ0LmFsZXJ0Q29uZmlybSh7XHJcbiAgICAgICAgICAgICAgICAnY29uZmlybUNhbGxiYWNrJzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFudGFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICd1cmwnOiAnL2RlbC9tb2RlbC8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdtb2RlbF9pZCc6IG1vZGVsSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWxJdGVtLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2luZG93Lm1lc3NhZ2VCb3guc2hvd1N1Y2Nlc3MocmVzdWx0WydtZXNzYWdlJ10pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG1vZGVsSXRlbS5yZW1vdmUoKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8vIOebkeWQrOS/neWtmOWNoeeJh+eahOS6i+S7tlxyXG5QaG90b0ZpdC5wcm90b3R5cGUubGlzdGVuU2F2ZVBob3RvQnRuRXZlbnQgPSBmdW5jdGlvbiAocGhvdG9JdGVtKSB7XHJcbiAgICB2YXIgc2F2ZUJ0biA9IHBob3RvSXRlbS5maW5kKFwiLnNhdmUtYnRuXCIpO1xyXG4gICAgdmFyIHRodW1ibmFpbFRhZyA9IHBob3RvSXRlbS5maW5kKFwiLnRodW1ibmFpbFwiKTtcclxuICAgIHNhdmVCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIOiOt+WPlmltZ+WbvueJh+eahHNyY+WxnuaAp+WvueW6lOeahOWAvO+8jOWPqumcgOimgeiwg+eUqGF0dHIoKeWHveaVsOWwseWPr+S7peS6hu+8jOW5tuS4jemcgOimgeiwg+eUqHZhbCgpXHJcbiAgICAgICAgdmFyIGltZ191cmwgPSB0aHVtYm5haWxUYWcuYXR0cihcInNyY1wiKTtcclxuICAgICAgICBhbnRhamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9zYXZlL3Bob3RvLycsXHJcbiAgICAgICAgICAgICdkYXRhJzoge1xyXG4gICAgICAgICAgICAgICAgJ2ltZ191cmwnOiBpbWdfdXJsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd1N1Y2Nlc3MoXCLlm77niYfkv53lrZjmiJDlip/vvIFcIik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdFsnY29kZSddKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRbJ21lc3NhZ2UnXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdmYWlsJzogZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvclsnbWVzc2FnZSddKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5cclxuUGhvdG9GaXQucHJvdG90eXBlLmxpc3RlbkFkZEJhbm5lckV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGFkZFBob3RvQnRuID0gJChcIiNhZGQtcGhvdG8tYnRuXCIpO1xyXG4gICAgYWRkUGhvdG9CdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuY3JlYXRlUGhvdG9CdG5FdmVudCgpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5cclxuLy8g5qih5Z6L5pyJ5YWzXHJcbi8vIOebkeWQrOaPkOS6pOW9k+WJjeeFp+eJh+S6i+S7tlxyXG5QaG90b0ZpdC5wcm90b3R5cGUubGlzdGVuRXh0cmFjdERhdGFFdmVudCA9IGZ1bmN0aW9uIChwaG90b0l0ZW0pIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBleHRyYWN0RGF0YUJ0biA9IHBob3RvSXRlbS5maW5kKFwiLmV4dHJhY3QtZGF0YS1idG5cIik7XHJcblxyXG4gICAgZXh0cmFjdERhdGFCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIHZhciB0cGwgPSB0ZW1wbGF0ZShcImRhdGEtaXRlbVwiKTtcclxuICAgICAgICAvLyBzZWxmLmRhdGFMaXN0R3JvdXAucHJlcGVuZCh0cGwpO1xyXG4gICAgICAgIHZhciB0aHVtYm5haWxUYWcgPSBwaG90b0l0ZW0uZmluZChcIi50aHVtYm5haWxcIik7XHJcblxyXG4gICAgICAgIC8vIOiOt+WPlmltZ+WbvueJh+eahHNyY+WxnuaAp+WvueW6lOeahOWAvO+8jOWPqumcgOimgeiwg+eUqGF0dHIoKeWHveaVsOWwseWPr+S7peS6hu+8jOW5tuS4jemcgOimgeiwg+eUqHZhbCgpXHJcbiAgICAgICAgdmFyIGltZ191cmwgPSB0aHVtYm5haWxUYWcuYXR0cihcInNyY1wiKTtcclxuXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coaW1nX3VybCk7XHJcblxyXG4gICAgICAgIGFudGFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL2V4dHJhY3QvZGF0YS8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICdpbWdfdXJsJzogaW1nX3VybCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dTdWNjZXNzKHJlc3VsdFsnbWVzc2FnZSddKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG59O1xyXG5cclxuLy8g5bCG57uP6L+HT3BlbkNW5aSE55CG5L+d5a2Y6Iez5pys5Zyw5pyN5Yqh5Zmo55qE54Wn54mH5pi+56S65Zyo5YmN56uvXHJcblBob3RvRml0LnByb3RvdHlwZS5saXN0ZW5EaXNwbGF5UGVyc29uTW9kZWxFdmVudCA9IGZ1bmN0aW9uIChwaG90b0l0ZW0pIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuXHJcbiAgICB2YXIgZGF0YUl0ZW0gPSBwaG90b0l0ZW0uZmluZChcIi5kYXRhLWl0ZW1cIik7XHJcblxyXG4gICAgdmFyIG1vZGVsVGh1bWJuYWlsID0gcGhvdG9JdGVtLmZpbmQoXCIubW9kZWxUaHVtYm5haWxcIik7XHJcblxyXG4gICAgdmFyIGV4dHJhY3REYXRhQnRuID0gcGhvdG9JdGVtLmZpbmQoXCIuZXh0cmFjdC1kYXRhLWJ0blwiKTtcclxuXHJcbiAgICBleHRyYWN0RGF0YUJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIGFudGFqYXguZ2V0KHtcclxuICAgICAgICAgICAgJ3VybCc6ICcvbW9kZWwvc2VyaWFsaXplLycsXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyB2YXIgbW9kZWxzID0gcmVzdWx0WydkYXRhJ107XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gZm9yICh2YXIgaSA9IDA7IGkgPCBtb2RlbHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgLy8gdmFyIG1vZGVsID0gbW9kZWxzW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAvLyB2YXIgdHBsID0gdGVtcGxhdGUoJ3Bob3Rvcy1pdGVtJywgeydtb2RlbCc6IG1vZGVsfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC8vIHNlbGYucGhvdG9MaXN0R3JvdXAuYXBwZW5kKHRwbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHVybCA9IHJlc3VsdFsnZGF0YSddWydtb2RlbF91cmwnXTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2cocmVzdWx0WydkYXRhJ10pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZyh1cmwpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhyZXN1bHRbJ2RhdGEnXVsnaWQnXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIG1vZGVUaHVtYm5haWxUYWcuYXR0cignc3JjJywgdXJsKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIG1vZGVscyA9IHJlc3VsdFsnZGF0YSddO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbW9kZWxzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtb2RlbCA9IG1vZGVsc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRwbCA9IHRlbXBsYXRlKCdwaG90b3MtaXRlbScsIHsnbW9kZWwnOiBtb2RlbH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnBob3RvTGlzdEdyb3VwLmFwcGVuZCh0cGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSByZXN1bHRbJ2RhdGEnXVtpXVsnbW9kZWxfdXJsJ107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbFRodW1ibmFpbC5hdHRyKCdzcmMnLCB1cmwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLyB1cmwgPSByZXN1bHRbJ2RhdGEnXVswXVsnbW9kZWxfdXJsJ107XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gbW9kZWxUaHVtYm5haWwuYXR0cihcInNyY1wiLCB1cmwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5cclxuLy8g5Yqg6L295omA5pyJ55qE5qih5Z6LXHJcblBob3RvRml0LnByb3RvdHlwZS5saXN0ZW5Mb2FkQWxsTW9kZWxFdmVudCA9IGZ1bmN0aW9uIChkYXRhSXRlbSkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIHZhciB0aHVtYm5haWwgPSBkYXRhSXRlbS5maW5kKFwiLm1vZGVsVGh1bWJuYWlsXCIpO1xyXG5cclxuICAgIGFudGFqYXguZ2V0KHtcclxuICAgICAgICAndXJsJzogJy9tb2RlbC9zZXJpYWxpemUvJyxcclxuICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAyMDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBtb2RlbHMgPSByZXN1bHRbJ2RhdGEnXTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbW9kZWxzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9IHJlc3VsdFsnZGF0YSddW2ldWydtb2RlbF91cmwnXTtcclxuICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWwuYXR0cignc3JjJywgdXJsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59O1xyXG5cclxuUGhvdG9GaXQucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMubGlzdGVuRXh0cmFjdERhdGFFdmVudCgpO1xyXG59O1xyXG5cclxuUGhvdG9GaXQucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMubGlzdGVuQWRkQmFubmVyRXZlbnQoKTtcclxuICAgIHRoaXMubGlzdGVuTG9hZEFsbERhdGFFdmVudCgpO1xyXG59O1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgcGhvdG8gPSBuZXcgUGhvdG9GaXQoKTtcclxuICAgIHBob3RvLnJ1bigpO1xyXG59KTsiXX0=
